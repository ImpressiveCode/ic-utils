<?xml version="1.0" encoding="UTF-8"?>

<root>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\BivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>BivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\DifferentiableMultivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableMultivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\DifferentiableMultivariateVectorFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableMultivariateVectorFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\DifferentiableUnivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableUnivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\DifferentiableUnivariateMatrixFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableUnivariateMatrixFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\DifferentiableUnivariateVectorFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableUnivariateVectorFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\DerivativeStructure.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>DerivativeStructure</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\DSCompiler.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>DSCompiler</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\FiniteDifferencesDifferentiator.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>FiniteDifferencesDifferentiator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\GradientFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>GradientFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\JacobianFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>JacobianFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\MultivariateDifferentiableFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>MultivariateDifferentiableFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\MultivariateDifferentiableVectorFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>MultivariateDifferentiableVectorFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\package-info.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\UnivariateDifferentiableFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateDifferentiableFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\UnivariateDifferentiableMatrixFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateDifferentiableMatrixFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\UnivariateDifferentiableVectorFunction.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateDifferentiableVectorFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\UnivariateFunctionDifferentiator.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateFunctionDifferentiator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\UnivariateMatrixFunctionDifferentiator.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateMatrixFunctionDifferentiator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\differentiation\UnivariateVectorFunctionDifferentiator.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateVectorFunctionDifferentiator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Abs.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Abs</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Acos.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Acos</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Acosh.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Acosh</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Add.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Add</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Asin.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Asin</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Asinh.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Asinh</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Atan.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Atan</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Atan2.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Atan2</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Atanh.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Atanh</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Cbrt.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Cbrt</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Ceil.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Ceil</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Constant.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Constant</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Cos.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Cos</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Cosh.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Cosh</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Divide.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Divide</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Exp.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Exp</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Expm1.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Expm1</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Floor.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Floor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Gaussian.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Gaussian</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\HarmonicOscillator.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>HarmonicOscillator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Identity.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Identity</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Inverse.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Inverse</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Log.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Log</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Log10.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Log10</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Log1p.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Log1p</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Logistic.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Logistic</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Logit.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Logit</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Max.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Max</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Min.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Min</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Minus.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Minus</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Multiply.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Multiply</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\package-info.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Pow.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Pow</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Power.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Power</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Rint.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Rint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Sigmoid.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Sigmoid</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Signum.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Signum</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Sin.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Sin</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Sinc.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Sinc</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Sinh.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Sinh</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Sqrt.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Sqrt</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\StepFunction.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>StepFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Subtract.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Subtract</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Tan.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Tan</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Tanh.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Tanh</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\function\Ulp.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>Ulp</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\FunctionUtils.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Class</type>
      <name>FunctionUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\BaseAbstractUnivariateIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Abstract</type>
      <name>BaseAbstractUnivariateIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\BaseRuleFactory.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Abstract</type>
      <name>BaseRuleFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\GaussIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>GaussIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\GaussIntegratorFactory.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>GaussIntegratorFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\HermiteRuleFactory.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>HermiteRuleFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\LegendreHighPrecisionRuleFactory.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>LegendreHighPrecisionRuleFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\LegendreRuleFactory.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>LegendreRuleFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\package-info.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\gauss\SymmetricGaussIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>SymmetricGaussIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\IterativeLegendreGaussIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>IterativeLegendreGaussIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\LegendreGaussIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>LegendreGaussIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\MidPointIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>MidPointIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\package-info.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\RombergIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>RombergIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\SimpsonIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>SimpsonIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\TrapezoidIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>TrapezoidIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\integration\UnivariateIntegrator.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Interface</type>
      <name>UnivariateIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\BicubicSplineInterpolatingFunction.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>BicubicSplineInterpolatingFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
    <class>
      <type>Class</type>
      <name>BicubicSplineFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\BicubicSplineInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>BicubicSplineInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\BivariateGridInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Interface</type>
      <name>BivariateGridInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\DividedDifferenceInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>DividedDifferenceInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\FieldHermiteInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>FieldHermiteInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\HermiteInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>HermiteInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\LinearInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>LinearInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\LoessInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>LoessInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\MicrosphereInterpolatingFunction.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>MicrosphereInterpolatingFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\MicrosphereInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>MicrosphereInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\MultivariateInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Interface</type>
      <name>MultivariateInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\NevilleInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>NevilleInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\package-info.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\SmoothingPolynomialBicubicSplineInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>SmoothingPolynomialBicubicSplineInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\SplineInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>SplineInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\TricubicSplineInterpolatingFunction.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>TricubicSplineInterpolatingFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
    <class>
      <type>Class</type>
      <name>TricubicSplineFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\TricubicSplineInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>TricubicSplineInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\TrivariateGridInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Interface</type>
      <name>TrivariateGridInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\UnivariateInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Interface</type>
      <name>UnivariateInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\interpolation\UnivariatePeriodicInterpolator.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>UnivariatePeriodicInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\MultivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>MultivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\MultivariateMatrixFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>MultivariateMatrixFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\MultivariateVectorFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>MultivariateVectorFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\package-info.java</path>
    <package>org.apache.commons.math3.analysis</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\ParametricUnivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>ParametricUnivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\polynomials\package-info.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\polynomials\PolynomialFunction.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\polynomials\PolynomialFunctionLagrangeForm.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialFunctionLagrangeForm</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\polynomials\PolynomialFunctionNewtonForm.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialFunctionNewtonForm</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\polynomials\PolynomialSplineFunction.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialSplineFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\polynomials\PolynomialsUtils.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialsUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\AbstractDifferentiableUnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>AbstractDifferentiableUnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\AbstractPolynomialSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>AbstractPolynomialSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\AbstractUnivariateDifferentiableSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>AbstractUnivariateDifferentiableSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\AbstractUnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>AbstractUnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\AllowedSolution.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Enum</type>
      <name>AllowedSolution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BaseAbstractUnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>BaseAbstractUnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BaseSecantSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>BaseSecantSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BaseUnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Interface</type>
      <name>BaseUnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BisectionSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>BisectionSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BracketedUnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Interface</type>
      <name>BracketedUnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BracketingNthOrderBrentSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>BracketingNthOrderBrentSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\BrentSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>BrentSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\DifferentiableUnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableUnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\IllinoisSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>IllinoisSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\LaguerreSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>LaguerreSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\MullerSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>MullerSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\MullerSolver2.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>MullerSolver2</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\NewtonRaphsonSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>NewtonRaphsonSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\NewtonSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>NewtonSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\package-info.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\PegasusSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>PegasusSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\PolynomialSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Interface</type>
      <name>PolynomialSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\RegulaFalsiSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>RegulaFalsiSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\RiddersSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>RiddersSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\SecantSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>SecantSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\UnivariateDifferentiableSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Interface</type>
      <name>UnivariateDifferentiableSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\UnivariateSolver.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Interface</type>
      <name>UnivariateSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\solvers\UnivariateSolverUtils.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>UnivariateSolverUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\TrivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>TrivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\UnivariateFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>UnivariateFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\UnivariateMatrixFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>UnivariateMatrixFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\analysis\UnivariateVectorFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Interface</type>
      <name>UnivariateVectorFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\Complex.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>Complex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\ComplexField.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexField</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\ComplexFormat.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\ComplexUtils.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\package-info.java</path>
    <package>org.apache.commons.math3.complex</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\Quaternion.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>Quaternion</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\complex\RootsOfUnity.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>RootsOfUnity</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\BracketingNthOrderBrentSolverDFP.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>BracketingNthOrderBrentSolverDFP</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\Dfp.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>Dfp</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\DfpDec.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>DfpDec</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\DfpField.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>DfpField</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\DfpMath.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>DfpMath</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\package-info.java</path>
    <package>org.apache.commons.math3.dfp</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\dfp\UnivariateDfpFunction.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Interface</type>
      <name>UnivariateDfpFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\AbstractIntegerDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Abstract</type>
      <name>AbstractIntegerDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\AbstractMultivariateRealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Abstract</type>
      <name>AbstractMultivariateRealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\AbstractRealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Abstract</type>
      <name>AbstractRealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\BetaDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>BetaDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\BinomialDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>BinomialDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\CauchyDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>CauchyDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\ChiSquaredDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ChiSquaredDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\EnumeratedDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>EnumeratedDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\EnumeratedIntegerDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>EnumeratedIntegerDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\EnumeratedRealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>EnumeratedRealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\ExponentialDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ExponentialDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\FDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>FDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\fitting\MultivariateNormalMixtureExpectationMaximization.java</path>
    <package>org.apache.commons.math3.distribution.fitting</package>
    <class>
      <type>Class</type>
      <name>MultivariateNormalMixtureExpectationMaximization</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\fitting\package-info.java</path>
    <package>org.apache.commons.math3.distribution.fitting</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\GammaDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>GammaDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\GeometricDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>GeometricDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\HypergeometricDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>HypergeometricDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\IntegerDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Interface</type>
      <name>IntegerDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\KolmogorovSmirnovDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>KolmogorovSmirnovDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\LevyDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>LevyDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\LogNormalDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>LogNormalDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\MixtureMultivariateNormalDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>MixtureMultivariateNormalDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\MixtureMultivariateRealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>MixtureMultivariateRealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\MultivariateNormalDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>MultivariateNormalDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\MultivariateRealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Interface</type>
      <name>MultivariateRealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\NormalDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>NormalDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\package-info.java</path>
    <package>org.apache.commons.math3.distribution</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\ParetoDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ParetoDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\PascalDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>PascalDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\PoissonDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>PoissonDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\RealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Interface</type>
      <name>RealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\SaddlePointExpansion.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>SaddlePointExpansion</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\TDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>TDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\TriangularDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>TriangularDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\UniformIntegerDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>UniformIntegerDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\UniformRealDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>UniformRealDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\WeibullDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>WeibullDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\distribution\ZipfDistribution.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ZipfDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\ConvergenceException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>ConvergenceException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\DimensionMismatchException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>DimensionMismatchException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathArithmeticException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathArithmeticException</name>
      <exception>true</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathIllegalArgumentException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathIllegalArgumentException</name>
      <exception>true</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathIllegalNumberException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathIllegalNumberException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathIllegalStateException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathIllegalStateException</name>
      <exception>true</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathInternalError.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathInternalError</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathParseException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathParseException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathRuntimeException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathRuntimeException</name>
      <exception>true</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MathUnsupportedOperationException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MathUnsupportedOperationException</name>
      <exception>true</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MaxCountExceededException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MaxCountExceededException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\MultiDimensionMismatchException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MultiDimensionMismatchException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NoBracketingException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NoBracketingException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NoDataException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NoDataException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NonMonotonicSequenceException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NonMonotonicSequenceException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NotANumberException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NotANumberException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NotFiniteNumberException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NotFiniteNumberException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NotPositiveException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NotPositiveException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NotStrictlyPositiveException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NotStrictlyPositiveException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NullArgumentException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NullArgumentException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NumberIsTooLargeException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NumberIsTooLargeException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\NumberIsTooSmallException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NumberIsTooSmallException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\OutOfRangeException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>OutOfRangeException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\package-info.java</path>
    <package>org.apache.commons.math3.exception</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\TooManyEvaluationsException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>TooManyEvaluationsException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\TooManyIterationsException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>TooManyIterationsException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\ArgUtils.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Class</type>
      <name>ArgUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\DummyLocalizable.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Class</type>
      <name>DummyLocalizable</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\ExceptionContext.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Class</type>
      <name>ExceptionContext</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\ExceptionContextProvider.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Interface</type>
      <name>ExceptionContextProvider</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\Localizable.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Interface</type>
      <name>Localizable</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\LocalizedFormats.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Enum</type>
      <name>LocalizedFormats</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\util\package-info.java</path>
    <package>org.apache.commons.math3.exception.util</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\exception\ZeroException.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>ZeroException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\Field.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Interface</type>
      <name>Field</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\FieldElement.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Interface</type>
      <name>FieldElement</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\filter\DefaultMeasurementModel.java</path>
    <package>org.apache.commons.math3.filter</package>
    <class>
      <type>Class</type>
      <name>DefaultMeasurementModel</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\filter\DefaultProcessModel.java</path>
    <package>org.apache.commons.math3.filter</package>
    <class>
      <type>Class</type>
      <name>DefaultProcessModel</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\filter\KalmanFilter.java</path>
    <package>org.apache.commons.math3.filter</package>
    <class>
      <type>Class</type>
      <name>KalmanFilter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\filter\MeasurementModel.java</path>
    <package>org.apache.commons.math3.filter</package>
    <class>
      <type>Interface</type>
      <name>MeasurementModel</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\filter\package-info.java</path>
    <package>org.apache.commons.math3.filter</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\filter\ProcessModel.java</path>
    <package>org.apache.commons.math3.filter</package>
    <class>
      <type>Interface</type>
      <name>ProcessModel</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\AbstractCurveFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Abstract</type>
      <name>AbstractCurveFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\CurveFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>CurveFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\GaussianCurveFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>GaussianCurveFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\GaussianFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>GaussianFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\HarmonicCurveFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>HarmonicCurveFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\HarmonicFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>HarmonicFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\AbstractLeastSquaresOptimizer.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLeastSquaresOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\GaussNewtonOptimizer.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>GaussNewtonOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\LevenbergMarquardtOptimizer.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>LevenbergMarquardtOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\package-info.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithConvergenceChecker.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithConvergenceChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithMaxEvaluations.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithMaxEvaluations</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithMaxIterations.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithMaxIterations</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithModelAndJacobian.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithModelAndJacobian</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithStartPoint.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithStartPoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithTarget.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithTarget</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\leastsquares\WithWeight.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Interface</type>
      <name>WithWeight</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\package-info.java</path>
    <package>org.apache.commons.math3.fitting</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\PolynomialFitter.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>PolynomialFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\WeightedObservedPoint.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>WeightedObservedPoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fitting\WeightedObservedPoints.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>WeightedObservedPoints</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\AbstractFormat.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Abstract</type>
      <name>AbstractFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\BigFraction.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>BigFraction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\BigFractionField.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>BigFractionField</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\BigFractionFormat.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>BigFractionFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\Fraction.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>Fraction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\FractionConversionException.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>FractionConversionException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\FractionField.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>FractionField</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\FractionFormat.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>FractionFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\package-info.java</path>
    <package>org.apache.commons.math3.fraction</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\ProperBigFractionFormat.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>ProperBigFractionFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\fraction\ProperFractionFormat.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>ProperFractionFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\AbstractListChromosome.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Abstract</type>
      <name>AbstractListChromosome</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\BinaryChromosome.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Abstract</type>
      <name>BinaryChromosome</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\BinaryMutation.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>BinaryMutation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\Chromosome.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Abstract</type>
      <name>Chromosome</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\ChromosomePair.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>ChromosomePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\CrossoverPolicy.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>CrossoverPolicy</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\CycleCrossover.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>CycleCrossover</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\ElitisticListPopulation.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>ElitisticListPopulation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\Fitness.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>Fitness</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\FixedElapsedTime.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>FixedElapsedTime</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\FixedGenerationCount.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>FixedGenerationCount</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\GeneticAlgorithm.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>GeneticAlgorithm</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\InvalidRepresentationException.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>InvalidRepresentationException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\ListPopulation.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Abstract</type>
      <name>ListPopulation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\MutationPolicy.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>MutationPolicy</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\NPointCrossover.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>NPointCrossover</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\OnePointCrossover.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>OnePointCrossover</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\OrderedCrossover.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>OrderedCrossover</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\package-info.java</path>
    <package>org.apache.commons.math3.genetics</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\PermutationChromosome.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>PermutationChromosome</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\Population.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>Population</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\RandomKey.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Abstract</type>
      <name>RandomKey</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\RandomKeyMutation.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>RandomKeyMutation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\SelectionPolicy.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>SelectionPolicy</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\StoppingCondition.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Interface</type>
      <name>StoppingCondition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\TournamentSelection.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>TournamentSelection</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\genetics\UniformCrossover.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>UniformCrossover</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\Euclidean1D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>Euclidean1D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\Interval.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>Interval</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\IntervalsSet.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>IntervalsSet</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\OrientedPoint.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>OrientedPoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\package-info.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\SubOrientedPoint.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>SubOrientedPoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\Vector1D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>Vector1D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\oned\Vector1DFormat.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>Vector1DFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\CardanEulerSingularityException.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>CardanEulerSingularityException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Euclidean3D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Euclidean3D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\FieldRotation.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>FieldRotation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\FieldVector3D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>FieldVector3D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Line.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Line</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\NotARotationMatrixException.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>NotARotationMatrixException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\OutlineExtractor.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>OutlineExtractor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\package-info.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Plane.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Plane</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\PolyhedronsSet.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>PolyhedronsSet</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Rotation.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Rotation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\RotationOrder.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>RotationOrder</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Segment.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Segment</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\SphericalCoordinates.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>SphericalCoordinates</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\SubLine.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>SubLine</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\SubPlane.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>SubPlane</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Vector3D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Vector3D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\threed\Vector3DFormat.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Vector3DFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\Euclidean2D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>Euclidean2D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\Line.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>Line</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\NestedLoops.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>NestedLoops</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\package-info.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\Segment.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>Segment</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\SubLine.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>SubLine</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\Vector2D.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>Vector2D</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\euclidean\twod\Vector2DFormat.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>Vector2DFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\package-info.java</path>
    <package>org.apache.commons.math3.geometry</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\AbstractRegion.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Abstract</type>
      <name>AbstractRegion</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\AbstractSubHyperplane.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Abstract</type>
      <name>AbstractSubHyperplane</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\BoundaryAttribute.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Class</type>
      <name>BoundaryAttribute</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\BoundarySizeVisitor.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Class</type>
      <name>BoundarySizeVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\BSPTree.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Class</type>
      <name>BSPTree</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\BSPTreeVisitor.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Interface</type>
      <name>BSPTreeVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\Embedding.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Interface</type>
      <name>Embedding</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\Hyperplane.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Interface</type>
      <name>Hyperplane</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\package-info.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\Region.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Interface</type>
      <name>Region</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\RegionFactory.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Class</type>
      <name>RegionFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\Side.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Enum</type>
      <name>Side</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\SubHyperplane.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Interface</type>
      <name>SubHyperplane</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\Transform.java</path>
    <package>org.apache.commons.math3.geometry.partitioning</package>
    <class>
      <type>Interface</type>
      <name>Transform</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\utilities\AVLTree.java</path>
    <package>org.apache.commons.math3.geometry.partitioning.utilities</package>
    <class>
      <type>Class</type>
      <name>AVLTree</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\utilities\OrderedTuple.java</path>
    <package>org.apache.commons.math3.geometry.partitioning.utilities</package>
    <class>
      <type>Class</type>
      <name>OrderedTuple</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\partitioning\utilities\package-info.java</path>
    <package>org.apache.commons.math3.geometry.partitioning.utilities</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\Space.java</path>
    <package>org.apache.commons.math3.geometry</package>
    <class>
      <type>Interface</type>
      <name>Space</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\Vector.java</path>
    <package>org.apache.commons.math3.geometry</package>
    <class>
      <type>Interface</type>
      <name>Vector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\geometry\VectorFormat.java</path>
    <package>org.apache.commons.math3.geometry</package>
    <class>
      <type>Abstract</type>
      <name>VectorFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\AbstractFieldMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>AbstractFieldMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\AbstractRealMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>AbstractRealMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\AnyMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>AnyMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\Array2DRowFieldMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>Array2DRowFieldMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\Array2DRowRealMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>Array2DRowRealMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\ArrayFieldVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>ArrayFieldVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\ArrayRealVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>ArrayRealVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\BiDiagonalTransformer.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>BiDiagonalTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\BlockFieldMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>BlockFieldMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\BlockRealMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>BlockRealMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\CholeskyDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>CholeskyDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\ConjugateGradient.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>ConjugateGradient</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DecompositionSolver.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>DecompositionSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DefaultFieldMatrixChangingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DefaultFieldMatrixChangingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DefaultFieldMatrixPreservingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DefaultFieldMatrixPreservingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DefaultIterativeLinearSolverEvent.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DefaultIterativeLinearSolverEvent</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DefaultRealMatrixChangingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DefaultRealMatrixChangingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DefaultRealMatrixPreservingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DefaultRealMatrixPreservingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\DiagonalMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DiagonalMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\EigenDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>EigenDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\FieldDecompositionSolver.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>FieldDecompositionSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\FieldLUDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>FieldLUDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\FieldMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>FieldMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\FieldMatrixChangingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>FieldMatrixChangingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\FieldMatrixPreservingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>FieldMatrixPreservingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\FieldVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>FieldVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\HessenbergTransformer.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>HessenbergTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\IllConditionedOperatorException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>IllConditionedOperatorException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\IterativeLinearSolver.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>IterativeLinearSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\IterativeLinearSolverEvent.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>IterativeLinearSolverEvent</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\JacobiPreconditioner.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>JacobiPreconditioner</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\LUDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>LUDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\MatrixDimensionMismatchException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>MatrixDimensionMismatchException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\MatrixUtils.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>MatrixUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\NonPositiveDefiniteMatrixException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>NonPositiveDefiniteMatrixException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\NonPositiveDefiniteOperatorException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>NonPositiveDefiniteOperatorException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\NonSelfAdjointOperatorException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>NonSelfAdjointOperatorException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\NonSquareMatrixException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>NonSquareMatrixException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\NonSquareOperatorException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>NonSquareOperatorException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\NonSymmetricMatrixException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>NonSymmetricMatrixException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\OpenMapRealMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>OpenMapRealMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\OpenMapRealVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>OpenMapRealVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\package-info.java</path>
    <package>org.apache.commons.math3.linear</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\PreconditionedIterativeLinearSolver.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>PreconditionedIterativeLinearSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\QRDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>QRDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealLinearOperator.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>RealLinearOperator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>RealMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealMatrixChangingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>RealMatrixChangingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealMatrixFormat.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RealMatrixFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealMatrixPreservingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>RealMatrixPreservingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>RealVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealVectorChangingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>RealVectorChangingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealVectorFormat.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RealVectorFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RealVectorPreservingVisitor.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>RealVectorPreservingVisitor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RectangularCholeskyDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RectangularCholeskyDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\RRQRDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RRQRDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SchurTransformer.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SchurTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SingularMatrixException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SingularMatrixException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SingularOperatorException.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SingularOperatorException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SingularValueDecomposition.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SingularValueDecomposition</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SparseFieldMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SparseFieldMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SparseFieldVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SparseFieldVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SparseRealMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Interface</type>
      <name>SparseRealMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SparseRealVector.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>SparseRealVector</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\SymmLQ.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SymmLQ</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\linear\TriDiagonalTransformer.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>TriDiagonalTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\CentroidCluster.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>CentroidCluster</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\Cluster.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>Cluster</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\Clusterable.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Interface</type>
      <name>Clusterable</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\Clusterer.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Abstract</type>
      <name>Clusterer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\DoublePoint.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>DoublePoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\FuzzyKMeansClusterer.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>FuzzyKMeansClusterer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\KMeansPlusPlusClusterer.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>KMeansPlusPlusClusterer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\MultiKMeansPlusPlusClusterer.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>MultiKMeansPlusPlusClusterer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\clustering\package-info.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\CanberraDistance.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>CanberraDistance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\ChebyshevDistance.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>ChebyshevDistance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\DistanceMeasure.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Interface</type>
      <name>DistanceMeasure</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\EarthMoversDistance.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>EarthMoversDistance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\EuclideanDistance.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>EuclideanDistance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\ManhattanDistance.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>ManhattanDistance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\distance\package-info.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ml\package-info.java</path>
    <package>org.apache.commons.math3.ml</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\AbstractIntegrator.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Abstract</type>
      <name>AbstractIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\AbstractParameterizable.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Abstract</type>
      <name>AbstractParameterizable</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ContinuousOutputModel.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>ContinuousOutputModel</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\EquationsMapper.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>EquationsMapper</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\events\EventFilter.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Class</type>
      <name>EventFilter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\events\EventHandler.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Interface</type>
      <name>EventHandler</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\events\EventState.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Class</type>
      <name>EventState</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\events\FilterType.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Enum</type>
      <name>FilterType</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\events\package-info.java</path>
    <package>org.apache.commons.math3.ode.events</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\events\Transformer.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Enum</type>
      <name>Transformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ExpandableStatefulODE.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>ExpandableStatefulODE</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\FirstOrderConverter.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>FirstOrderConverter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\FirstOrderDifferentialEquations.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>FirstOrderDifferentialEquations</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\FirstOrderIntegrator.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>FirstOrderIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\JacobianMatrices.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>JacobianMatrices</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\MainStateJacobianProvider.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>MainStateJacobianProvider</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\MultistepIntegrator.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Abstract</type>
      <name>MultistepIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\AdamsBashforthIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>AdamsBashforthIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\AdamsIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Abstract</type>
      <name>AdamsIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\AdamsMoultonIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>AdamsMoultonIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\AdamsNordsieckTransformer.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>AdamsNordsieckTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\AdaptiveStepsizeIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Abstract</type>
      <name>AdaptiveStepsizeIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\ClassicalRungeKuttaIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ClassicalRungeKuttaIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\ClassicalRungeKuttaStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ClassicalRungeKuttaStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\DormandPrince54Integrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince54Integrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\DormandPrince54StepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince54StepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\DormandPrince853Integrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince853Integrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\DormandPrince853StepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince853StepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\EmbeddedRungeKuttaIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Abstract</type>
      <name>EmbeddedRungeKuttaIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\EulerIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>EulerIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\EulerStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>EulerStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\GillIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GillIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\GillStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GillStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\GraggBulirschStoerIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GraggBulirschStoerIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\GraggBulirschStoerStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GraggBulirschStoerStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\HighamHall54Integrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>HighamHall54Integrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\HighamHall54StepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>HighamHall54StepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\MidpointIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>MidpointIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\MidpointStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>MidpointStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\package-info.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\RungeKuttaIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Abstract</type>
      <name>RungeKuttaIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\RungeKuttaStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Abstract</type>
      <name>RungeKuttaStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\ThreeEighthesIntegrator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ThreeEighthesIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\nonstiff\ThreeEighthesStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ThreeEighthesStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ODEIntegrator.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>ODEIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\package-info.java</path>
    <package>org.apache.commons.math3.ode</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ParameterConfiguration.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>ParameterConfiguration</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\Parameterizable.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>Parameterizable</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ParameterizedODE.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>ParameterizedODE</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ParameterizedWrapper.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>ParameterizedWrapper</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ParameterJacobianProvider.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>ParameterJacobianProvider</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\ParameterJacobianWrapper.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>ParameterJacobianWrapper</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\AbstractStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Abstract</type>
      <name>AbstractStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\DummyStepHandler.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>DummyStepHandler</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\FixedStepHandler.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Interface</type>
      <name>FixedStepHandler</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\NordsieckStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>NordsieckStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\package-info.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\StepHandler.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Interface</type>
      <name>StepHandler</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\StepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Interface</type>
      <name>StepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\StepNormalizer.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>StepNormalizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\StepNormalizerBounds.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Enum</type>
      <name>StepNormalizerBounds</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\sampling\StepNormalizerMode.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Enum</type>
      <name>StepNormalizerMode</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\SecondaryEquations.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>SecondaryEquations</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\SecondOrderDifferentialEquations.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>SecondOrderDifferentialEquations</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\SecondOrderIntegrator.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Interface</type>
      <name>SecondOrderIntegrator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\ode\UnknownParameterException.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>UnknownParameterException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\AbstractConvergenceChecker.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Abstract</type>
      <name>AbstractConvergenceChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\AbstractOptimizer.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Abstract</type>
      <name>AbstractOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\BaseMultiStartMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Abstract</type>
      <name>BaseMultiStartMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\BaseMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Abstract</type>
      <name>BaseMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\BaseOptimizer.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Abstract</type>
      <name>BaseOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\ConvergenceChecker.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Interface</type>
      <name>ConvergenceChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\InitialGuess.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>InitialGuess</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\LinearConstraint.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>LinearConstraint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\LinearConstraintSet.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>LinearConstraintSet</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\LinearObjectiveFunction.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>LinearObjectiveFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\LinearOptimizer.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Abstract</type>
      <name>LinearOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\NoFeasibleSolutionException.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>NoFeasibleSolutionException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\NonNegativeConstraint.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>NonNegativeConstraint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\package-info.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\Relationship.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Enum</type>
      <name>Relationship</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\SimplexSolver.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\SimplexTableau.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexTableau</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\linear\UnboundedSolutionException.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>UnboundedSolutionException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\MaxEval.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>MaxEval</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\MaxIter.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>MaxIter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\GoalType.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Enum</type>
      <name>GoalType</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\gradient\NonLinearConjugateGradientOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.gradient</package>
    <class>
      <type>Class</type>
      <name>NonLinearConjugateGradientOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\gradient\package-info.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.gradient</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\gradient\Preconditioner.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.gradient</package>
    <class>
      <type>Interface</type>
      <name>Preconditioner</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\GradientMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Abstract</type>
      <name>GradientMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\LeastSquaresConverter.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>LeastSquaresConverter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\MultiStartMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>MultiStartMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\MultivariateFunctionMappingAdapter.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionMappingAdapter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\MultivariateFunctionPenaltyAdapter.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionPenaltyAdapter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\MultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Abstract</type>
      <name>MultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\AbstractSimplex.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Abstract</type>
      <name>AbstractSimplex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\BOBYQAOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>BOBYQAOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\CMAESOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>CMAESOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\MultiDirectionalSimplex.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>MultiDirectionalSimplex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\NelderMeadSimplex.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>NelderMeadSimplex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\package-info.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\PowellOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>PowellOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\SimplexOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>SimplexOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\ObjectiveFunction.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>ObjectiveFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\ObjectiveFunctionGradient.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>ObjectiveFunctionGradient</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\scalar\package-info.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\AbstractLeastSquaresOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLeastSquaresOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\GaussNewtonOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>GaussNewtonOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\LevenbergMarquardtOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>LevenbergMarquardtOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\package-info.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\JacobianMultivariateVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Abstract</type>
      <name>JacobianMultivariateVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\ModelFunction.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Class</type>
      <name>ModelFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\ModelFunctionJacobian.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Class</type>
      <name>ModelFunctionJacobian</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\MultiStartMultivariateVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Class</type>
      <name>MultiStartMultivariateVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\MultivariateVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Abstract</type>
      <name>MultivariateVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\package-info.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\Target.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Class</type>
      <name>Target</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\nonlinear\vector\Weight.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Class</type>
      <name>Weight</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\OptimizationData.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Interface</type>
      <name>OptimizationData</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\package-info.java</path>
    <package>org.apache.commons.math3.optim</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\PointValuePair.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>PointValuePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\PointVectorValuePair.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>PointVectorValuePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\SimpleBounds.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimpleBounds</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\SimplePointChecker.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimplePointChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\SimpleValueChecker.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimpleValueChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\SimpleVectorValueChecker.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimpleVectorValueChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\BracketFinder.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>BracketFinder</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\BrentOptimizer.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>BrentOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\MultiStartUnivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>MultiStartUnivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\package-info.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\SearchInterval.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>SearchInterval</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\SimpleUnivariateValueChecker.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>SimpleUnivariateValueChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\UnivariateObjectiveFunction.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>UnivariateObjectiveFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\UnivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Abstract</type>
      <name>UnivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optim\univariate\UnivariatePointValuePair.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>UnivariatePointValuePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\AbstractConvergenceChecker.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Abstract</type>
      <name>AbstractConvergenceChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\BaseMultivariateMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>BaseMultivariateMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\BaseMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>BaseMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\BaseMultivariateSimpleBoundsOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>BaseMultivariateSimpleBoundsOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\BaseMultivariateVectorMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>BaseMultivariateVectorMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\BaseMultivariateVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>BaseMultivariateVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\BaseOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>BaseOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\ConvergenceChecker.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>ConvergenceChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\DifferentiableMultivariateMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>DifferentiableMultivariateMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\DifferentiableMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\DifferentiableMultivariateVectorMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>DifferentiableMultivariateVectorMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\DifferentiableMultivariateVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>DifferentiableMultivariateVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\AbstractSimplex.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Abstract</type>
      <name>AbstractSimplex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\BaseAbstractMultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Abstract</type>
      <name>BaseAbstractMultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\BaseAbstractMultivariateSimpleBoundsOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Abstract</type>
      <name>BaseAbstractMultivariateSimpleBoundsOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\BaseAbstractMultivariateVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Abstract</type>
      <name>BaseAbstractMultivariateVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\BOBYQAOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>BOBYQAOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\CMAESOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>CMAESOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\MultiDirectionalSimplex.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>MultiDirectionalSimplex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\MultivariateFunctionMappingAdapter.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionMappingAdapter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\MultivariateFunctionPenaltyAdapter.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionPenaltyAdapter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\NelderMeadSimplex.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>NelderMeadSimplex</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\package-info.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\PowellOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>PowellOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\direct\SimplexOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>SimplexOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\fitting\CurveFitter.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>CurveFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\fitting\GaussianFitter.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>GaussianFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\fitting\HarmonicFitter.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>HarmonicFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\fitting\package-info.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\fitting\PolynomialFitter.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>PolynomialFitter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\fitting\WeightedObservedPoint.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>WeightedObservedPoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\AbstractDifferentiableOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Abstract</type>
      <name>AbstractDifferentiableOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\AbstractLeastSquaresOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLeastSquaresOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\AbstractScalarDifferentiableOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Abstract</type>
      <name>AbstractScalarDifferentiableOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\ConjugateGradientFormula.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Enum</type>
      <name>ConjugateGradientFormula</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\GaussNewtonOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>GaussNewtonOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\LevenbergMarquardtOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>LevenbergMarquardtOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\NonLinearConjugateGradientOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>NonLinearConjugateGradientOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\package-info.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\general\Preconditioner.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Interface</type>
      <name>Preconditioner</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\GoalType.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Enum</type>
      <name>GoalType</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\InitialGuess.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>InitialGuess</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\LeastSquaresConverter.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>LeastSquaresConverter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\AbstractLinearOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLinearOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\LinearConstraint.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>LinearConstraint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\LinearObjectiveFunction.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>LinearObjectiveFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\LinearOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Interface</type>
      <name>LinearOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\NoFeasibleSolutionException.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>NoFeasibleSolutionException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\package-info.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\Relationship.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Enum</type>
      <name>Relationship</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\SimplexSolver.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexSolver</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\SimplexTableau.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexTableau</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\linear\UnboundedSolutionException.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>UnboundedSolutionException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\MultivariateDifferentiableMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>MultivariateDifferentiableMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\MultivariateDifferentiableOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>MultivariateDifferentiableOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\MultivariateDifferentiableVectorMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>MultivariateDifferentiableVectorMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\MultivariateDifferentiableVectorOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>MultivariateDifferentiableVectorOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\MultivariateMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>MultivariateMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\MultivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>MultivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\OptimizationData.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Interface</type>
      <name>OptimizationData</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\package-info.java</path>
    <package>org.apache.commons.math3.optimization</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\PointValuePair.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>PointValuePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\PointVectorValuePair.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>PointVectorValuePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\SimpleBounds.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimpleBounds</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\SimplePointChecker.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimplePointChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\SimpleValueChecker.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimpleValueChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\SimpleVectorValueChecker.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimpleVectorValueChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\Target.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>Target</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\BaseAbstractUnivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Abstract</type>
      <name>BaseAbstractUnivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\BaseUnivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Interface</type>
      <name>BaseUnivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\BracketFinder.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>BracketFinder</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\BrentOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>BrentOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\package-info.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\SimpleUnivariateValueChecker.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>SimpleUnivariateValueChecker</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\UnivariateMultiStartOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>UnivariateMultiStartOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\UnivariateOptimizer.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Interface</type>
      <name>UnivariateOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\univariate\UnivariatePointValuePair.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>UnivariatePointValuePair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\optimization\Weight.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>Weight</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\package-info.java</path>
    <package>org.apache.commons.math3</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\primes\package-info.java</path>
    <package>org.apache.commons.math3.primes</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\primes\PollardRho.java</path>
    <package>org.apache.commons.math3.primes</package>
    <class>
      <type>Class</type>
      <name>PollardRho</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\primes\Primes.java</path>
    <package>org.apache.commons.math3.primes</package>
    <class>
      <type>Class</type>
      <name>Primes</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\primes\SmallPrimes.java</path>
    <package>org.apache.commons.math3.primes</package>
    <class>
      <type>Class</type>
      <name>SmallPrimes</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\AbstractRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Abstract</type>
      <name>AbstractRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\AbstractWell.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Abstract</type>
      <name>AbstractWell</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\BitsStreamGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Abstract</type>
      <name>BitsStreamGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\CorrelatedRandomVectorGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>CorrelatedRandomVectorGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\EmpiricalDistribution.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>EmpiricalDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\GaussianRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>GaussianRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\HaltonSequenceGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>HaltonSequenceGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\ISAACRandom.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>ISAACRandom</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\JDKRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>JDKRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\MersenneTwister.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>MersenneTwister</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\NormalizedRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Interface</type>
      <name>NormalizedRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\package-info.java</path>
    <package>org.apache.commons.math3.random</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomAdaptor.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>RandomAdaptor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomData.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Interface</type>
      <name>RandomData</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomDataGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>RandomDataGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomDataImpl.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>RandomDataImpl</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Interface</type>
      <name>RandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomGeneratorFactory.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>RandomGeneratorFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\RandomVectorGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Interface</type>
      <name>RandomVectorGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\SobolSequenceGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>SobolSequenceGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\StableRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>StableRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\SynchronizedRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>SynchronizedRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\UncorrelatedRandomVectorGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>UncorrelatedRandomVectorGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\UniformRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>UniformRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\UnitSphereRandomVectorGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>UnitSphereRandomVectorGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\ValueServer.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>ValueServer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\Well1024a.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well1024a</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\Well19937a.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well19937a</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\Well19937c.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well19937c</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\Well44497a.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well44497a</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\Well44497b.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well44497b</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\random\Well512a.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well512a</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\RealFieldElement.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Interface</type>
      <name>RealFieldElement</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\special\Beta.java</path>
    <package>org.apache.commons.math3.special</package>
    <class>
      <type>Class</type>
      <name>Beta</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\special\Erf.java</path>
    <package>org.apache.commons.math3.special</package>
    <class>
      <type>Class</type>
      <name>Erf</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\special\Gamma.java</path>
    <package>org.apache.commons.math3.special</package>
    <class>
      <type>Class</type>
      <name>Gamma</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\special\package-info.java</path>
    <package>org.apache.commons.math3.special</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\clustering\Cluster.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>Cluster</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\clustering\Clusterable.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Interface</type>
      <name>Clusterable</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\clustering\EuclideanDoublePoint.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>EuclideanDoublePoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\clustering\EuclideanIntegerPoint.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>EuclideanIntegerPoint</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\clustering\KMeansPlusPlusClusterer.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>KMeansPlusPlusClusterer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\clustering\package-info.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\correlation\Covariance.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>Covariance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\correlation\package-info.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\correlation\PearsonsCorrelation.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>PearsonsCorrelation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\correlation\SpearmansCorrelation.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>SpearmansCorrelation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\correlation\StorelessBivariateCovariance.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>StorelessBivariateCovariance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\correlation\StorelessCovariance.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>StorelessCovariance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\AbstractStorelessUnivariateStatistic.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Abstract</type>
      <name>AbstractStorelessUnivariateStatistic</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\AbstractUnivariateStatistic.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Abstract</type>
      <name>AbstractUnivariateStatistic</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\AggregateSummaryStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>AggregateSummaryStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\DescriptiveStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>DescriptiveStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\FirstMoment.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>FirstMoment</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\FourthMoment.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>FourthMoment</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\GeometricMean.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>GeometricMean</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\Kurtosis.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>Kurtosis</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\Mean.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>Mean</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\package-info.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\SecondMoment.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>SecondMoment</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\SemiVariance.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>SemiVariance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\Skewness.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>Skewness</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\StandardDeviation.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>StandardDeviation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\ThirdMoment.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>ThirdMoment</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\Variance.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>Variance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\VectorialCovariance.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>VectorialCovariance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\moment\VectorialMean.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>VectorialMean</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\MultivariateSummaryStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>MultivariateSummaryStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\package-info.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\rank\Max.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>Max</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\rank\Median.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>Median</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\rank\Min.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>Min</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\rank\package-info.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\rank\Percentile.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>Percentile</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\StatisticalMultivariateSummary.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Interface</type>
      <name>StatisticalMultivariateSummary</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\StatisticalSummary.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Interface</type>
      <name>StatisticalSummary</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\StatisticalSummaryValues.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>StatisticalSummaryValues</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\StorelessUnivariateStatistic.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Interface</type>
      <name>StorelessUnivariateStatistic</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\summary\package-info.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\summary\Product.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>Product</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\summary\Sum.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>Sum</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\summary\SumOfLogs.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>SumOfLogs</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\summary\SumOfSquares.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>SumOfSquares</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\SummaryStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SummaryStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\SynchronizedDescriptiveStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SynchronizedDescriptiveStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\SynchronizedMultivariateSummaryStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SynchronizedMultivariateSummaryStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\SynchronizedSummaryStatistics.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SynchronizedSummaryStatistics</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\UnivariateStatistic.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Interface</type>
      <name>UnivariateStatistic</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\descriptive\WeightedEvaluation.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Interface</type>
      <name>WeightedEvaluation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\Frequency.java</path>
    <package>org.apache.commons.math3.stat</package>
    <class>
      <type>Class</type>
      <name>Frequency</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\ChiSquareTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>ChiSquareTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\GTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>GTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\MannWhitneyUTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>MannWhitneyUTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\OneWayAnova.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>OneWayAnova</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\package-info.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\TestUtils.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>TestUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\TTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>TTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\inference\WilcoxonSignedRankTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>WilcoxonSignedRankTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\package-info.java</path>
    <package>org.apache.commons.math3.stat</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\ranking\NaNStrategy.java</path>
    <package>org.apache.commons.math3.stat.ranking</package>
    <class>
      <type>Enum</type>
      <name>NaNStrategy</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\ranking\NaturalRanking.java</path>
    <package>org.apache.commons.math3.stat.ranking</package>
    <class>
      <type>Class</type>
      <name>NaturalRanking</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\ranking\package-info.java</path>
    <package>org.apache.commons.math3.stat.ranking</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\ranking\RankingAlgorithm.java</path>
    <package>org.apache.commons.math3.stat.ranking</package>
    <class>
      <type>Interface</type>
      <name>RankingAlgorithm</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\ranking\TiesStrategy.java</path>
    <package>org.apache.commons.math3.stat.ranking</package>
    <class>
      <type>Enum</type>
      <name>TiesStrategy</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\AbstractMultipleLinearRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Abstract</type>
      <name>AbstractMultipleLinearRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\GLSMultipleLinearRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>GLSMultipleLinearRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\MillerUpdatingRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>MillerUpdatingRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\ModelSpecificationException.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>ModelSpecificationException</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\MultipleLinearRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Interface</type>
      <name>MultipleLinearRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\OLSMultipleLinearRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>OLSMultipleLinearRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\package-info.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\RegressionResults.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>RegressionResults</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\SimpleRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>SimpleRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\regression\UpdatingMultipleLinearRegression.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Interface</type>
      <name>UpdatingMultipleLinearRegression</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\stat\StatUtils.java</path>
    <package>org.apache.commons.math3.stat</package>
    <class>
      <type>Class</type>
      <name>StatUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\DctNormalization.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Enum</type>
      <name>DctNormalization</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\DftNormalization.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Enum</type>
      <name>DftNormalization</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\DstNormalization.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Enum</type>
      <name>DstNormalization</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\FastCosineTransformer.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastCosineTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\FastFourierTransformer.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastFourierTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\FastHadamardTransformer.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastHadamardTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\FastSineTransformer.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastSineTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\package-info.java</path>
    <package>org.apache.commons.math3.transform</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\RealTransformer.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Interface</type>
      <name>RealTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\TransformType.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Enum</type>
      <name>TransformType</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\transform\TransformUtils.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>TransformUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\ArithmeticUtils.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>ArithmeticUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\BigReal.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>BigReal</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\BigRealField.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>BigRealField</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\CombinatoricsUtils.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>CombinatoricsUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\CompositeFormat.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>CompositeFormat</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\ContinuedFraction.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Abstract</type>
      <name>ContinuedFraction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\Decimal64.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>Decimal64</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\Decimal64Field.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>Decimal64Field</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\DefaultTransformer.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>DefaultTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\DoubleArray.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Interface</type>
      <name>DoubleArray</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\FastMathCalc.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>FastMathCalc</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\FastMathLiteralArrays.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>FastMathLiteralArrays</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\Incrementor.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>Incrementor</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\IterationEvent.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>IterationEvent</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\IterationListener.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Interface</type>
      <name>IterationListener</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\IterationManager.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>IterationManager</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\MathUtils.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>MathUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\MultidimensionalCounter.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>MultidimensionalCounter</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\NumberTransformer.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Interface</type>
      <name>NumberTransformer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\OpenIntToDoubleHashMap.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>OpenIntToDoubleHashMap</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\OpenIntToFieldHashMap.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>OpenIntToFieldHashMap</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\package-info.java</path>
    <package>org.apache.commons.math3.util</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\Pair.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>Pair</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\Precision.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>Precision</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\main\java\org\apache\commons\math3\util\TransformerMap.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>TransformerMap</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\differentiation\DerivativeStructureTest.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>DerivativeStructureTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\differentiation\DSCompilerTest.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>DSCompilerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\differentiation\FiniteDifferencesDifferentiatorTest.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>FiniteDifferencesDifferentiatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\differentiation\GradientFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>GradientFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\differentiation\JacobianFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.differentiation</package>
    <class>
      <type>Class</type>
      <name>JacobianFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\GaussianTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>GaussianTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\HarmonicOscillatorTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>HarmonicOscillatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\LogisticTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>LogisticTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\LogitTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>LogitTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\SigmoidTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>SigmoidTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\SincTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>SincTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\SqrtTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>SqrtTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\function\StepFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.function</package>
    <class>
      <type>Class</type>
      <name>StepFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\FunctionUtilsTest.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Class</type>
      <name>FunctionUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\BaseRuleFactoryTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>BaseRuleFactoryTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
    <class>
      <type>Class</type>
      <name>RuleBuilder</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
    <class>
      <type>Class</type>
      <name>DummyRuleFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\GaussianQuadratureAbstractTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Abstract</type>
      <name>GaussianQuadratureAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\GaussIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>GaussIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\HermiteParametricTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>HermiteParametricTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\HermiteTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>HermiteTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\LegendreHighPrecisionParametricTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>LegendreHighPrecisionParametricTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\LegendreHighPrecisionTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>LegendreHighPrecisionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\LegendreParametricTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>LegendreParametricTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\gauss\LegendreTest.java</path>
    <package>org.apache.commons.math3.analysis.integration.gauss</package>
    <class>
      <type>Class</type>
      <name>LegendreTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\IterativeLegendreGaussIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>IterativeLegendreGaussIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\LegendreGaussIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>LegendreGaussIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\MidPointIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>MidPointIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\RombergIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>RombergIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\SimpsonIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>SimpsonIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\integration\TrapezoidIntegratorTest.java</path>
    <package>org.apache.commons.math3.analysis.integration</package>
    <class>
      <type>Class</type>
      <name>TrapezoidIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\BicubicSplineInterpolatingFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>BicubicSplineInterpolatingFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\BicubicSplineInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>BicubicSplineInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\DividedDifferenceInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>DividedDifferenceInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\FieldHermiteInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>FieldHermiteInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\HermiteInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>HermiteInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\LinearInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>LinearInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\LoessInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>LoessInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\MicrosphereInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>MicrosphereInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\NevilleInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>NevilleInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\SmoothingPolynomialBicubicSplineInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>SmoothingPolynomialBicubicSplineInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\SplineInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>SplineInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\TricubicSplineInterpolatingFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>TricubicSplineInterpolatingFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\TricubicSplineInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>TricubicSplineInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\interpolation\UnivariatePeriodicInterpolatorTest.java</path>
    <package>org.apache.commons.math3.analysis.interpolation</package>
    <class>
      <type>Class</type>
      <name>UnivariatePeriodicInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\MonitoredFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Class</type>
      <name>MonitoredFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\polynomials\PolynomialFunctionLagrangeFormTest.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialFunctionLagrangeFormTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\polynomials\PolynomialFunctionNewtonFormTest.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialFunctionNewtonFormTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\polynomials\PolynomialFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\polynomials\PolynomialSplineFunctionTest.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialSplineFunctionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\polynomials\PolynomialsUtilsTest.java</path>
    <package>org.apache.commons.math3.analysis.polynomials</package>
    <class>
      <type>Class</type>
      <name>PolynomialsUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\QuinticFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Class</type>
      <name>QuinticFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\BaseSecantSolverAbstractTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Abstract</type>
      <name>BaseSecantSolverAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\BisectionSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>BisectionSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\BracketingNthOrderBrentSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>BracketingNthOrderBrentSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\BrentSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>BrentSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\IllinoisSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>IllinoisSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\LaguerreSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>LaguerreSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\MullerSolver2Test.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>MullerSolver2Test</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\MullerSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>MullerSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\NewtonRaphsonSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>NewtonRaphsonSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\NewtonSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>NewtonSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\PegasusSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>PegasusSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\RegulaFalsiSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>RegulaFalsiSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\RiddersSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>RiddersSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\SecantSolverTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>SecantSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\solvers\UnivariateSolverUtilsTest.java</path>
    <package>org.apache.commons.math3.analysis.solvers</package>
    <class>
      <type>Class</type>
      <name>UnivariateSolverUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\SumSincFunction.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Class</type>
      <name>SumSincFunction</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\analysis\XMinus5Function.java</path>
    <package>org.apache.commons.math3.analysis</package>
    <class>
      <type>Class</type>
      <name>XMinus5Function</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\ComplexFieldTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexFieldTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\ComplexFormatAbstractTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Abstract</type>
      <name>ComplexFormatAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\ComplexFormatTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\ComplexTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\ComplexUtilsTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>ComplexUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\FrenchComplexFormatTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>FrenchComplexFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\QuaternionTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>QuaternionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\complex\RootsOfUnityTest.java</path>
    <package>org.apache.commons.math3.complex</package>
    <class>
      <type>Class</type>
      <name>RootsOfUnityTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\dfp\BracketingNthOrderBrentSolverDFPTest.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>BracketingNthOrderBrentSolverDFPTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\dfp\Decimal10.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>Decimal10</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\dfp\DfpDecTest.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>DfpDecTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\dfp\DfpMathTest.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>DfpMathTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\dfp\DfpTest.java</path>
    <package>org.apache.commons.math3.dfp</package>
    <class>
      <type>Class</type>
      <name>DfpTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\AbstractIntegerDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>AbstractIntegerDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\AbstractRealDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>AbstractRealDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\BetaDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>BetaDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\BinomialDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>BinomialDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\CauchyDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>CauchyDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\ChiSquaredDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ChiSquaredDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\EnumeratedIntegerDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>EnumeratedIntegerDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\EnumeratedRealDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>EnumeratedRealDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\ExponentialDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ExponentialDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\FDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>FDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\fitting\MultivariateNormalMixtureExpectationMaximizationTest.java</path>
    <package>org.apache.commons.math3.distribution.fitting</package>
    <class>
      <type>Class</type>
      <name>MultivariateNormalMixtureExpectationMaximizationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\GammaDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>GammaDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\GeometricDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>GeometricDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\HypergeometricDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>HypergeometricDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\IntegerDistributionAbstractTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Abstract</type>
      <name>IntegerDistributionAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\KolmogorovSmirnovDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>KolmogorovSmirnovDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\LevyDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>LevyDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\LogNormalDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>LogNormalDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\MultivariateNormalDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>MultivariateNormalDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\MultivariateNormalMixtureModelDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>MultivariateNormalMixtureModelDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
    <class>
      <type>Class</type>
      <name>MultivariateNormalMixtureModelDistribution</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\NormalDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>NormalDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\ParetoDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ParetoDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\PascalDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>PascalDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\PoissonDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>PoissonDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\RealDistributionAbstractTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Abstract</type>
      <name>RealDistributionAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\TDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>TDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\TriangularDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>TriangularDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\UniformIntegerDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>UniformIntegerDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\UniformRealDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>UniformRealDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\WeibullDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>WeibullDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\distribution\ZipfDistributionTest.java</path>
    <package>org.apache.commons.math3.distribution</package>
    <class>
      <type>Class</type>
      <name>ZipfDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\DimensionMismatchExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>DimensionMismatchExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\MaxCountExceededExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>MaxCountExceededExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\NonMonotonicSequenceExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NonMonotonicSequenceExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\NotPositiveExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NotPositiveExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\NotStrictlyPositiveExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NotStrictlyPositiveExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\NumberIsTooLargeExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NumberIsTooLargeExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\NumberIsTooSmallExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>NumberIsTooSmallExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\OutOfRangeExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>OutOfRangeExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\TooManyEvaluationsExceptionTest.java</path>
    <package>org.apache.commons.math3.exception</package>
    <class>
      <type>Class</type>
      <name>TooManyEvaluationsExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\util\ArgUtilsTest.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Class</type>
      <name>ArgUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\util\ExceptionContextTest.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Class</type>
      <name>ExceptionContextTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\exception\util\LocalizedFormatsTest.java</path>
    <package>org.apache.commons.math3.exception.util</package>
    <class>
      <type>Class</type>
      <name>LocalizedFormatsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ExtendedFieldElementAbstractTest.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Abstract</type>
      <name>ExtendedFieldElementAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\filter\KalmanFilterTest.java</path>
    <package>org.apache.commons.math3.filter</package>
    <class>
      <type>Class</type>
      <name>KalmanFilterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\CurveFitterTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>CurveFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\GaussianCurveFitterTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>GaussianCurveFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\GaussianFitterTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>GaussianFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\HarmonicCurveFitterTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>HarmonicCurveFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\HarmonicFitterTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>HarmonicFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\AbstractLeastSquaresOptimizerAbstractTest.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLeastSquaresOptimizerAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\AbstractLeastSquaresOptimizerTest.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>AbstractLeastSquaresOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\AbstractLeastSquaresOptimizerTestValidation.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>AbstractLeastSquaresOptimizerTestValidation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\CircleProblem.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>CircleProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\CircleVectorial.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>CircleVectorial</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\GaussNewtonOptimizerTest.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>GaussNewtonOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\LevenbergMarquardtOptimizerTest.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>LevenbergMarquardtOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\MinpackTest.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>MinpackTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\RandomCirclePointGenerator.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>RandomCirclePointGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\RandomStraightLinePointGenerator.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>RandomStraightLinePointGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\StatisticalReferenceDataset.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Abstract</type>
      <name>StatisticalReferenceDataset</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\StatisticalReferenceDatasetFactory.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>StatisticalReferenceDatasetFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\leastsquares\StraightLineProblem.java</path>
    <package>org.apache.commons.math3.fitting.leastsquares</package>
    <class>
      <type>Class</type>
      <name>StraightLineProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\PolynomialFitterTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>PolynomialFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fitting\WeightedObservedPointsTest.java</path>
    <package>org.apache.commons.math3.fitting</package>
    <class>
      <type>Class</type>
      <name>WeightedObservedPointsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fraction\BigFractionFieldTest.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>BigFractionFieldTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fraction\BigFractionFormatTest.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>BigFractionFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fraction\BigFractionTest.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>BigFractionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fraction\FractionFieldTest.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>FractionFieldTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fraction\FractionFormatTest.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>FractionFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\fraction\FractionTest.java</path>
    <package>org.apache.commons.math3.fraction</package>
    <class>
      <type>Class</type>
      <name>FractionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\BinaryChromosomeTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>BinaryChromosomeTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\BinaryMutationTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>BinaryMutationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\ChromosomeTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>ChromosomeTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\CycleCrossoverTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>CycleCrossoverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\DummyBinaryChromosome.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>DummyBinaryChromosome</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\DummyListChromosome.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>DummyListChromosome</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\DummyRandomKey.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>DummyRandomKey</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\ElitisticListPopulationTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>ElitisticListPopulationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\FitnessCachingTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>FitnessCachingTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\FixedElapsedTimeTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>FixedElapsedTimeTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\FixedGenerationCountTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>FixedGenerationCountTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\GeneticAlgorithmTestBinary.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>GeneticAlgorithmTestBinary</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\GeneticAlgorithmTestPermutations.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>GeneticAlgorithmTestPermutations</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\ListPopulationTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>ListPopulationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\NPointCrossoverTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>NPointCrossoverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\OnePointCrossoverTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>OnePointCrossoverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\OrderedCrossoverTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>OrderedCrossoverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\RandomKeyMutationTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>RandomKeyMutationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\RandomKeyTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>RandomKeyTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\TournamentSelectionTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>TournamentSelectionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\genetics\UniformCrossoverTest.java</path>
    <package>org.apache.commons.math3.genetics</package>
    <class>
      <type>Class</type>
      <name>UniformCrossoverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\oned\IntervalsSetTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>IntervalsSetTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\oned\IntervalTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.oned</package>
    <class>
      <type>Class</type>
      <name>IntervalTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\FieldRotationDfpTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>FieldRotationDfpTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\FieldRotationDSTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>FieldRotationDSTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\FieldVector3DTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>FieldVector3DTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\FrenchVector3DFormatTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>FrenchVector3DFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\LineTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>LineTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\PlaneTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>PlaneTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\PolyhedronsSetTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>PolyhedronsSetTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\RotationOrderTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>RotationOrderTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\RotationTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>RotationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\SphericalCoordinatesTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>SphericalCoordinatesTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\SubLineTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>SubLineTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\Vector3DFormatAbstractTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Abstract</type>
      <name>Vector3DFormatAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\Vector3DFormatTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Vector3DFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\threed\Vector3DTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.threed</package>
    <class>
      <type>Class</type>
      <name>Vector3DTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\twod\LineTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>LineTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\twod\PolygonsSetTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>PolygonsSetTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\twod\SegmentTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>SegmentTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\geometry\euclidean\twod\SubLineTest.java</path>
    <package>org.apache.commons.math3.geometry.euclidean.twod</package>
    <class>
      <type>Class</type>
      <name>SubLineTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\Array2DRowRealMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>Array2DRowRealMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\ArrayFieldVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>ArrayFieldVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\ArrayRealVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>ArrayRealVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\BiDiagonalTransformerTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>BiDiagonalTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\BlockFieldMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>BlockFieldMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\BlockRealMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>BlockRealMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\CholeskyDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>CholeskyDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\CholeskySolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>CholeskySolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\ConjugateGradientTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>ConjugateGradientTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\DiagonalMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>DiagonalMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\EigenDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>EigenDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\EigenSolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>EigenSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\FieldLUDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>FieldLUDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\FieldLUSolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>FieldLUSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\FieldMatrixImplTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>FieldMatrixImplTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\FrenchRealVectorFormatTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>FrenchRealVectorFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\HessenbergTransformerTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>HessenbergTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\HilbertMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>HilbertMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\InverseHilbertMatrix.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>InverseHilbertMatrix</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\LUDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>LUDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\LUSolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>LUSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\MatrixDimensionMismatchExceptionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>MatrixDimensionMismatchExceptionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\MatrixUtilsTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>MatrixUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\OpenMapRealMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>OpenMapRealMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\QRDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>QRDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\QRSolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>QRSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RealMatrixFormatAbstractTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>RealMatrixFormatAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RealMatrixFormatTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RealMatrixFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RealVectorAbstractTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>RealVectorAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RealVectorFormatAbstractTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>RealVectorFormatAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RealVectorFormatTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RealVectorFormatTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RealVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RealVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RectangularCholeskyDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RectangularCholeskyDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RRQRDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RRQRDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\RRQRSolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>RRQRSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SchurTransformerTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SchurTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SingularValueDecompositionTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SingularValueDecompositionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SingularValueSolverTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SingularValueSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SparseFieldMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SparseFieldMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SparseFieldVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SparseFieldVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SparseRealMatrixTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SparseRealMatrixTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SparseRealVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SparseRealVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\SymmLQTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>SymmLQTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\TriDiagonalTransformerTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>TriDiagonalTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\UnmodifiableArrayRealVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>UnmodifiableArrayRealVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\UnmodifiableOpenMapRealVectorTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Class</type>
      <name>UnmodifiableOpenMapRealVectorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\linear\UnmodifiableRealVectorAbstractTest.java</path>
    <package>org.apache.commons.math3.linear</package>
    <class>
      <type>Abstract</type>
      <name>UnmodifiableRealVectorAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\clustering\DBSCANClustererTest.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>DBSCANClustererTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\clustering\FuzzyKMeansClustererTest.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>FuzzyKMeansClustererTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\clustering\KMeansPlusPlusClustererTest.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>KMeansPlusPlusClustererTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\clustering\MultiKMeansPlusPlusClustererTest.java</path>
    <package>org.apache.commons.math3.ml.clustering</package>
    <class>
      <type>Class</type>
      <name>MultiKMeansPlusPlusClustererTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\distance\CanberraDistanceTest.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>CanberraDistanceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\distance\ChebyshevDistanceTest.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>ChebyshevDistanceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\distance\EarthMoversDistanceTest.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>EarthMoversDistanceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\distance\EuclideanDistanceTest.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>EuclideanDistanceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ml\distance\ManhattanDistanceTest.java</path>
    <package>org.apache.commons.math3.ml.distance</package>
    <class>
      <type>Class</type>
      <name>ManhattanDistanceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\ContinuousOutputModelTest.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>ContinuousOutputModelTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\events\EventFilterTest.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Class</type>
      <name>EventFilterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\events\EventStateTest.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Class</type>
      <name>EventStateTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\events\OverlappingEventsTest.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Class</type>
      <name>OverlappingEventsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\events\ReappearingEventTest.java</path>
    <package>org.apache.commons.math3.ode.events</package>
    <class>
      <type>Class</type>
      <name>ReappearingEventTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\FirstOrderConverterTest.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>FirstOrderConverterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\JacobianMatricesTest.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>JacobianMatricesTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\AdamsBashforthIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>AdamsBashforthIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\AdamsMoultonIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>AdamsMoultonIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\ClassicalRungeKuttaIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ClassicalRungeKuttaIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\ClassicalRungeKuttaStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ClassicalRungeKuttaStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\DormandPrince54IntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince54IntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\DormandPrince54StepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince54StepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\DormandPrince853IntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince853IntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\DormandPrince853StepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>DormandPrince853StepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\EulerIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>EulerIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\EulerStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>EulerStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\GillIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GillIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\GillStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GillStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\GraggBulirschStoerIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GraggBulirschStoerIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\GraggBulirschStoerStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>GraggBulirschStoerStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\HighamHall54IntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>HighamHall54IntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\HighamHall54StepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>HighamHall54StepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\MidpointIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>MidpointIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\MidpointStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>MidpointStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\StepProblem.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>StepProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\ThreeEighthesIntegratorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ThreeEighthesIntegratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\nonstiff\ThreeEighthesStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.nonstiff</package>
    <class>
      <type>Class</type>
      <name>ThreeEighthesStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\DummyStepInterpolator.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>DummyStepInterpolator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\DummyStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>DummyStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\NordsieckStepInterpolatorTest.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>NordsieckStepInterpolatorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\StepInterpolatorTestUtils.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>StepInterpolatorTestUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\StepNormalizerOutputOverlapTest.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>StepNormalizerOutputOverlapTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\StepNormalizerOutputTest.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>StepNormalizerOutputTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\StepNormalizerOutputTestBase.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Abstract</type>
      <name>StepNormalizerOutputTestBase</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\sampling\StepNormalizerTest.java</path>
    <package>org.apache.commons.math3.ode.sampling</package>
    <class>
      <type>Class</type>
      <name>StepNormalizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblem1.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblem1</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblem2.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblem2</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblem3.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblem3</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblem4.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblem4</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblem5.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblem5</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblem6.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblem6</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblemAbstract.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Abstract</type>
      <name>TestProblemAbstract</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblemFactory.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblemFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\ode\TestProblemHandler.java</path>
    <package>org.apache.commons.math3.ode</package>
    <class>
      <type>Class</type>
      <name>TestProblemHandler</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\linear\SimplexSolverTest.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\linear\SimplexTableauTest.java</path>
    <package>org.apache.commons.math3.optim.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexTableauTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\gradient\CircleScalar.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.gradient</package>
    <class>
      <type>Class</type>
      <name>CircleScalar</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\gradient\NonLinearConjugateGradientOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.gradient</package>
    <class>
      <type>Class</type>
      <name>NonLinearConjugateGradientOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\MultiStartMultivariateOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>MultiStartMultivariateOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\MultivariateFunctionMappingAdapterTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionMappingAdapterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\MultivariateFunctionPenaltyAdapterTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionPenaltyAdapterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\BOBYQAOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>BOBYQAOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\PowellOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>PowellOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\SimplexOptimizerMultiDirectionalTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>SimplexOptimizerMultiDirectionalTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\scalar\noderiv\SimplexOptimizerNelderMeadTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.scalar.noderiv</package>
    <class>
      <type>Class</type>
      <name>SimplexOptimizerNelderMeadTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\AbstractLeastSquaresOptimizerAbstractTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLeastSquaresOptimizerAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\AbstractLeastSquaresOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>AbstractLeastSquaresOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\AbstractLeastSquaresOptimizerTestValidation.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>AbstractLeastSquaresOptimizerTestValidation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
    <class>
      <type>Class</type>
      <name>DummyOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\CircleProblem.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>CircleProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\CircleVectorial.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>CircleVectorial</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\GaussNewtonOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>GaussNewtonOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\LevenbergMarquardtOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>LevenbergMarquardtOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\MinpackTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>MinpackTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\RandomCirclePointGenerator.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>RandomCirclePointGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\RandomStraightLinePointGenerator.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>RandomStraightLinePointGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\StatisticalReferenceDataset.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Abstract</type>
      <name>StatisticalReferenceDataset</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\StatisticalReferenceDatasetFactory.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>StatisticalReferenceDatasetFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\jacobian\StraightLineProblem.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector.jacobian</package>
    <class>
      <type>Class</type>
      <name>StraightLineProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\nonlinear\vector\MultiStartMultivariateVectorOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.nonlinear.vector</package>
    <class>
      <type>Class</type>
      <name>MultiStartMultivariateVectorOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\PointValuePairTest.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>PointValuePairTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\PointVectorValuePairTest.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>PointVectorValuePairTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\SimplePointCheckerTest.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimplePointCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\SimpleValueCheckerTest.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimpleValueCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\SimpleVectorValueCheckerTest.java</path>
    <package>org.apache.commons.math3.optim</package>
    <class>
      <type>Class</type>
      <name>SimpleVectorValueCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\univariate\BracketFinderTest.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>BracketFinderTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\univariate\BrentOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>BrentOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\univariate\MultiStartUnivariateOptimizerTest.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>MultiStartUnivariateOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optim\univariate\SimpleUnivariateValueCheckerTest.java</path>
    <package>org.apache.commons.math3.optim.univariate</package>
    <class>
      <type>Class</type>
      <name>SimpleUnivariateValueCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\direct\BOBYQAOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>BOBYQAOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\direct\MultivariateFunctionMappingAdapterTest.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionMappingAdapterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\direct\MultivariateFunctionPenaltyAdapterTest.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>MultivariateFunctionPenaltyAdapterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\direct\PowellOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>PowellOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\direct\SimplexOptimizerMultiDirectionalTest.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>SimplexOptimizerMultiDirectionalTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\direct\SimplexOptimizerNelderMeadTest.java</path>
    <package>org.apache.commons.math3.optimization.direct</package>
    <class>
      <type>Class</type>
      <name>SimplexOptimizerNelderMeadTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\fitting\CurveFitterTest.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>CurveFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\fitting\GaussianFitterTest.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>GaussianFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\fitting\HarmonicFitterTest.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>HarmonicFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\fitting\PolynomialFitterTest.java</path>
    <package>org.apache.commons.math3.optimization.fitting</package>
    <class>
      <type>Class</type>
      <name>PolynomialFitterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\AbstractLeastSquaresOptimizerAbstractTest.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Abstract</type>
      <name>AbstractLeastSquaresOptimizerAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\AbstractLeastSquaresOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>AbstractLeastSquaresOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\AbstractLeastSquaresOptimizerTestValidation.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>AbstractLeastSquaresOptimizerTestValidation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
    <class>
      <type>Class</type>
      <name>DummyOptimizer</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\CircleProblem.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>CircleProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\CircleScalar.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>CircleScalar</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\CircleVectorial.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>CircleVectorial</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\GaussNewtonOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>GaussNewtonOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\LevenbergMarquardtOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>LevenbergMarquardtOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\MinpackTest.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>MinpackTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\NonLinearConjugateGradientOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>NonLinearConjugateGradientOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\RandomCirclePointGenerator.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>RandomCirclePointGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\RandomStraightLinePointGenerator.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>RandomStraightLinePointGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\StatisticalReferenceDataset.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Abstract</type>
      <name>StatisticalReferenceDataset</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\StatisticalReferenceDatasetFactory.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>StatisticalReferenceDatasetFactory</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\general\StraightLineProblem.java</path>
    <package>org.apache.commons.math3.optimization.general</package>
    <class>
      <type>Class</type>
      <name>StraightLineProblem</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\linear\SimplexSolverTest.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexSolverTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\linear\SimplexTableauTest.java</path>
    <package>org.apache.commons.math3.optimization.linear</package>
    <class>
      <type>Class</type>
      <name>SimplexTableauTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\MultivariateDifferentiableMultiStartOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>MultivariateDifferentiableMultiStartOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\MultivariateDifferentiableVectorMultiStartOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>MultivariateDifferentiableVectorMultiStartOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\MultivariateMultiStartOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>MultivariateMultiStartOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\PointValuePairTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>PointValuePairTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\PointVectorValuePairTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>PointVectorValuePairTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\SimplePointCheckerTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimplePointCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\SimpleValueCheckerTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimpleValueCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\SimpleVectorValueCheckerTest.java</path>
    <package>org.apache.commons.math3.optimization</package>
    <class>
      <type>Class</type>
      <name>SimpleVectorValueCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\univariate\BracketFinderTest.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>BracketFinderTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\univariate\BrentOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>BrentOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\univariate\SimpleUnivariateValueCheckerTest.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>SimpleUnivariateValueCheckerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\optimization\univariate\UnivariateMultiStartOptimizerTest.java</path>
    <package>org.apache.commons.math3.optimization.univariate</package>
    <class>
      <type>Class</type>
      <name>UnivariateMultiStartOptimizerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\PerfTestUtils.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Class</type>
      <name>PerfTestUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\primes\PrimesTest.java</path>
    <package>org.apache.commons.math3.primes</package>
    <class>
      <type>Class</type>
      <name>PrimesTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\AbstractRandomGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>AbstractRandomGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\BitsStreamGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>BitsStreamGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\CorrelatedRandomVectorGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>CorrelatedRandomVectorGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\EmpiricalDistributionTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>EmpiricalDistributionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\GaussianRandomGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>GaussianRandomGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\HaltonSequenceGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>HaltonSequenceGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\ISAACTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>ISAACTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\MersenneTwisterTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>MersenneTwisterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\RandomAdaptorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>RandomAdaptorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\RandomGeneratorFactoryTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>RandomGeneratorFactoryTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\SobolSequenceGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>SobolSequenceGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\StableRandomGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>StableRandomGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\SynchronizedRandomGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>SynchronizedRandomGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\TestRandomGenerator.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>TestRandomGenerator</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\UncorrelatedRandomVectorGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>UncorrelatedRandomVectorGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\UniformRandomGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>UniformRandomGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\UnitSphereRandomVectorGeneratorTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>UnitSphereRandomVectorGeneratorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\Well1024aTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well1024aTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\Well19937aTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well19937aTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\Well19937cTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well19937cTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\Well44497aTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well44497aTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\Well44497bTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well44497bTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\random\Well512aTest.java</path>
    <package>org.apache.commons.math3.random</package>
    <class>
      <type>Class</type>
      <name>Well512aTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\Retry.java</path>
    <package>org.apache.commons.math3</package>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\RetryRunner.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Class</type>
      <name>RetryRunner</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\special\BetaTest.java</path>
    <package>org.apache.commons.math3.special</package>
    <class>
      <type>Class</type>
      <name>BetaTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\special\ErfTest.java</path>
    <package>org.apache.commons.math3.special</package>
    <class>
      <type>Class</type>
      <name>ErfTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\special\GammaTest.java</path>
    <package>org.apache.commons.math3.special</package>
    <class>
      <type>Class</type>
      <name>GammaTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\CertifiedDataTest.java</path>
    <package>org.apache.commons.math3.stat</package>
    <class>
      <type>Class</type>
      <name>CertifiedDataTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\clustering\DBSCANClustererTest.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>DBSCANClustererTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\clustering\EuclideanDoublePointTest.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>EuclideanDoublePointTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\clustering\EuclideanIntegerPointTest.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>EuclideanIntegerPointTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\clustering\KMeansPlusPlusClustererTest.java</path>
    <package>org.apache.commons.math3.stat.clustering</package>
    <class>
      <type>Class</type>
      <name>KMeansPlusPlusClustererTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\correlation\CovarianceTest.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>CovarianceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\correlation\PearsonsCorrelationTest.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>PearsonsCorrelationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\correlation\SpearmansRankCorrelationTest.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>SpearmansRankCorrelationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\correlation\StorelessCovarianceTest.java</path>
    <package>org.apache.commons.math3.stat.correlation</package>
    <class>
      <type>Class</type>
      <name>StorelessCovarianceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\data\CertifiedDataAbstractTest.java</path>
    <package>org.apache.commons.math3.stat.data</package>
    <class>
      <type>Abstract</type>
      <name>CertifiedDataAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\data\LewTest.java</path>
    <package>org.apache.commons.math3.stat.data</package>
    <class>
      <type>Class</type>
      <name>LewTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\data\LotteryTest.java</path>
    <package>org.apache.commons.math3.stat.data</package>
    <class>
      <type>Class</type>
      <name>LotteryTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\AbstractUnivariateStatisticTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>AbstractUnivariateStatisticTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\AggregateSummaryStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>AggregateSummaryStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\DescriptiveStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>DescriptiveStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\ListUnivariateImpl.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>ListUnivariateImpl</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\ListUnivariateImplTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>ListUnivariateImplTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\MixedListUnivariateImplTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>MixedListUnivariateImplTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\FirstMomentTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>FirstMomentTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\FourthMomentTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>FourthMomentTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\GeometricMeanTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>GeometricMeanTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\InteractionTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>InteractionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\KurtosisTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>KurtosisTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\MeanTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>MeanTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\SecondMomentTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>SecondMomentTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\SemiVarianceTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>SemiVarianceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\SkewnessTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>SkewnessTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\StandardDeviationTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>StandardDeviationTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\ThirdMomentTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>ThirdMomentTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\VarianceTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>VarianceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\VectorialCovarianceTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>VectorialCovarianceTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\moment\VectorialMeanTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.moment</package>
    <class>
      <type>Class</type>
      <name>VectorialMeanTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\MultivariateSummaryStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>MultivariateSummaryStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\rank\MaxTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>MaxTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\rank\MedianTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>MedianTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\rank\MinTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>MinTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\rank\PercentileTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.rank</package>
    <class>
      <type>Class</type>
      <name>PercentileTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\StatisticalSummaryValuesTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>StatisticalSummaryValuesTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\StorelessUnivariateStatisticAbstractTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Abstract</type>
      <name>StorelessUnivariateStatisticAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\summary\ProductTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>ProductTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\summary\SumLogTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>SumLogTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\summary\SumSqTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>SumSqTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\summary\SumTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive.summary</package>
    <class>
      <type>Class</type>
      <name>SumTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\SummaryStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SummaryStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\SynchronizedDescriptiveStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SynchronizedDescriptiveStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\SynchronizedMultivariateSummaryStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SynchronizedMultivariateSummaryStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\SynchronizedSummaryStatisticsTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Class</type>
      <name>SynchronizedSummaryStatisticsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\descriptive\UnivariateStatisticAbstractTest.java</path>
    <package>org.apache.commons.math3.stat.descriptive</package>
    <class>
      <type>Abstract</type>
      <name>UnivariateStatisticAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\FrequencyTest.java</path>
    <package>org.apache.commons.math3.stat</package>
    <class>
      <type>Class</type>
      <name>FrequencyTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\ChiSquareTestTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>ChiSquareTestTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\GTestTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>GTestTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\MannWhitneyUTestTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>MannWhitneyUTestTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\OneWayAnovaTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>OneWayAnovaTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\TestUtilsTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>TestUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\TTestTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>TTestTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\inference\WilcoxonSignedRankTestTest.java</path>
    <package>org.apache.commons.math3.stat.inference</package>
    <class>
      <type>Class</type>
      <name>WilcoxonSignedRankTestTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\ranking\NaturalRankingTest.java</path>
    <package>org.apache.commons.math3.stat.ranking</package>
    <class>
      <type>Class</type>
      <name>NaturalRankingTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\regression\GLSMultipleLinearRegressionTest.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>GLSMultipleLinearRegressionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\regression\MillerUpdatingRegressionTest.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>MillerUpdatingRegressionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\regression\MultipleLinearRegressionAbstractTest.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Abstract</type>
      <name>MultipleLinearRegressionAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\regression\OLSMultipleLinearRegressionTest.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>OLSMultipleLinearRegressionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\regression\SimpleRegressionTest.java</path>
    <package>org.apache.commons.math3.stat.regression</package>
    <class>
      <type>Class</type>
      <name>SimpleRegressionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\stat\StatUtilsTest.java</path>
    <package>org.apache.commons.math3.stat</package>
    <class>
      <type>Class</type>
      <name>StatUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\TestUtils.java</path>
    <package>org.apache.commons.math3</package>
    <class>
      <type>Class</type>
      <name>TestUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\transform\FastCosineTransformerTest.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastCosineTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\transform\FastFourierTransformerTest.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastFourierTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\transform\FastHadamardTransformerTest.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastHadamardTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\transform\FastSineTransformerTest.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Class</type>
      <name>FastSineTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\transform\RealTransformerAbstractTest.java</path>
    <package>org.apache.commons.math3.transform</package>
    <class>
      <type>Abstract</type>
      <name>RealTransformerAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\userguide\ClusterAlgorithmComparison.java</path>
    <package>org.apache.commons.math3.userguide</package>
    <class>
      <type>Class</type>
      <name>ClusterAlgorithmComparison</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\userguide\ExampleUtils.java</path>
    <package>org.apache.commons.math3.userguide</package>
    <class>
      <type>Class</type>
      <name>ExampleUtils</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\userguide\LowDiscrepancyGeneratorComparison.java</path>
    <package>org.apache.commons.math3.userguide</package>
    <class>
      <type>Class</type>
      <name>LowDiscrepancyGeneratorComparison</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\ArithmeticUtilsTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>ArithmeticUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\BigRealFieldTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>BigRealFieldTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\BigRealTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>BigRealTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\CombinationsTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>CombinationsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\CombinatoricsUtilsTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>CombinatoricsUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\ContinuedFractionTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>ContinuedFractionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\Decimal64Test.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>Decimal64Test</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\DefaultTransformerTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>DefaultTransformerTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\DoubleArrayAbstractTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Abstract</type>
      <name>DoubleArrayAbstractTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>false</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\FastMathTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>FastMathTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\FastMathTestPerformance.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>FastMathTestPerformance</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\IncrementorTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>IncrementorTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\MathUtilsTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>MathUtilsTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\MultidimensionalCounterTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>MultidimensionalCounterTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\OpenIntToDoubleHashMapTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>OpenIntToDoubleHashMapTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\OpenIntToFieldTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>OpenIntToFieldTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\PairTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>PairTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\PrecisionTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>PrecisionTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\ResizableDoubleArrayTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>ResizableDoubleArrayTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\TestBean.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>TestBean</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\java\org\apache\commons\math3\util\TransformerMapTest.java</path>
    <package>org.apache.commons.math3.util</package>
    <class>
      <type>Class</type>
      <name>TransformerMapTest</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
  <file>
    <path>D:\work\svn\commons-math-trunk\src\test\maxima\special\RealFunctionValidation\RealFunctionValidation.java</path>
    <package>default</package>
    <class>
      <type>Class</type>
      <name>RealFunctionValidation</name>
      <exception>false</exception>
      <inner>false</inner>
      <test>true</test>
    </class>
  </file>
</root>
